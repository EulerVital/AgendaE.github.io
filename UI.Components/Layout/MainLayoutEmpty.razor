@using Domain.Dto
@using Microsoft.JSInterop
@using Newtonsoft.Json
@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject ISnackbar Snackbar

<div class="cor-fundo">
    @Body
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // var dotNetRef = DotNetObjectReference.Create(this);
            // await JS.InvokeVoidAsync("initializeMessaging", dotNetRef);
        }
    }

    [JSInvokable]
    public void ReceiveMessage(object payload)
    {
        try
        {
            // Converter o payload para um objeto JSON
            string json = JsonConvert.SerializeObject(payload);
            var data = JsonConvert.DeserializeObject<NotificationPayloadDto>(json);

            if (data == null)
                return;

            // Exibir a notificação usando MudBlazor
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomRight;
            Snackbar.Add($"{data.Title}: {data.Body}", Severity.Info);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao processar notificação: {ex.Message}", Severity.Error);
        }
    }
}

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />